

@model WebApplication1.V_CSCOAR

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.CONAME, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.CONAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CONAME, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.CONO, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.CONO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CONO, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.ARNO, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.ARNO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ARNO, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.LASTAR, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.LASTAR, new { htmlAttributes = new {  @Value = Model.LASTAR.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })
    
                    @Html.ValidationMessageFor(model => model.LASTAR, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.ARTOFILE, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.ARTOFILE, new { htmlAttributes = new {  @Value = Model.ARTOFILE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })
    
                    @Html.ValidationMessageFor(model => model.ARTOFILE, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.FILEDAR, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.FILEDAR, new { htmlAttributes = new {  @Value = Model.FILEDAR.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })
    
                    @Html.ValidationMessageFor(model => model.FILEDAR, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.REMINDER1, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.REMINDER1, new { htmlAttributes = new {  @Value = Model.REMINDER1.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })
    
                    @Html.ValidationMessageFor(model => model.REMINDER1, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.REM, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.REM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.REM, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.SUBMITAR, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.SUBMITAR, new { htmlAttributes = new {  @Value = Model.SUBMITAR.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })
    
                    @Html.ValidationMessageFor(model => model.SUBMITAR, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group col-md-10 form-check-inline">
                @Html.LabelFor(model => model.REMINDER2, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
    					@Html.EditorFor(model => model.REMINDER2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.REMINDER2, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary fa fa-save" Title="Create" />
    				@Html.ActionLink(" Back", "Index", null, new { @class = "btn btn-info fa fa-arrow-left" })
                </div>
            </div>
        </div>
    }
    
    
</body>
</html>
