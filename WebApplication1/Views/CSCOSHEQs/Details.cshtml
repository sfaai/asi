@using WebApplication1.Utility;
@model WebApplication1.CSCOSHEQ

@{
    ViewBag.Title = "Details  CSCOSHEQ";
}
<div class="border border-info bg-info" style="width:98vw">
    <h4 class="h4 text-center">@ViewBag.Title</h4>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.CONO)

        @Html.HiddenFor(model => model.PRSCODE)

        @Html.HiddenFor(model => model.MVNO)

        @Html.HiddenFor(model => model.MVID)

        @Html.HiddenFor(model => model.MVTYPE)

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.MVDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.MVDATE, new { htmlAttributes = new {  @Value = Model.MVDATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker, @readonly = true" } })

                @Html.ValidationMessageFor(model => model.MVDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.MVSIGN, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MVSIGN, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.MVSIGN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.FOLIONOSRC, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FOLIONOSRC, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.FOLIONOSRC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.EQCODE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EQCODE, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.EQCODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SCRIPT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SCRIPT, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.SCRIPT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CERTNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CERTNO, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.CERTNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SHAREAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SHAREAMT, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.SHAREAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SSHAREAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SSHAREAMT, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.SSHAREAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SHAREOS, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SHAREOS, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.SHAREOS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.AMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AMT, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.AMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SAMT, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.SAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.REM, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.REM, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.REM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.REFCNT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.REFCNT, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.REFCNT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.COMPLETE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COMPLETE, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.COMPLETE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.COMPLETED, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.COMPLETED, new { htmlAttributes = new {  @Value = Model.COMPLETED.ToString("yyyy-MM-dd"), @class = "form-control date datepicker, @readonly = true" } })

                @Html.ValidationMessageFor(model => model.COMPLETED, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
	        <div class="col-md-offset-2 col-md-10">
				@Html.ActionLink("Edit", "Edit", new { id =  MyHtmlHelpers.ConvertIdToByteStr(Model.Id ) }, new {@class="btn btn-primary fa fa-edit", title="Edit"})
				@Html.ActionLink(" Back", "Index", null, new { @class = "btn btn-info fa fa-arrow-left" })
            </div>
        </div>
    </div>
}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
