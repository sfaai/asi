@using WebApplication1.Utility;
@model IEnumerable<WebApplication1.CSITEM>

@{
    Layout = "~/Views/Shared/_LayoutG.cshtml";
    ViewBag.Title = "Item Type";
}

<div class="border border-info bg-info">
    <h4 class="h4 text-center">@ViewBag.Title</h4>
</div>


<table class="table table-bordered table-hover table-responsive-lg table-sm">
    <tr  class="label-primary">
	   <th>
         @Html.ActionLink("Add", "Create", null, new { @class = "btn btn-primary h4" })
       </th>
        <th>
            @Html.DisplayNameFor(model => model.ITEMTYPE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ITEMDESC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GSTCODE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GSTRATE)
        </th>
        <th>
            @Html.ActionLink(" ", "Listing", null, new { @class = "btn btn-primary h4 fa fa-print", title = "Listing" })
        </th>
        
    </tr>

@foreach (var item in Model) {
            <tr class="text-nowrap">
                <td>
                    @Html.ActionLink(" ", "Edit", new { id =  MyHtmlHelpers.ConvertIdToByteStr(item.ITEMTYPE ) }, new {@class="fa fa-edit", title="Edit"})
                    @Html.ActionLink(" ", "Details", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.ITEMTYPE ) }, new { @class = "fa fa-folder", title = "Details" })
                    @Html.ActionLink(" ", "Delete", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.ITEMTYPE ) }, new { @class = "fa fa-trash", title = "Delete" })
                </td>
        <td>
            @Html.DisplayFor(modelItem => item.ITEMTYPE)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ITEMDESC)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GSTCODE)
        </td>
        <td colspan="2">
            @Html.DisplayFor(modelItem => item.GSTRATE)
        </td>

    </tr>
}

</table>
