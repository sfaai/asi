@using WebApplication1.Utility;
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<WebApplication1.CSJOBD>

@{
    ViewBag.Title = "Job Status Tracking";
}

<div class="border border-info bg-info" style="width:98vw">
    <h4 class="h4 text-center">@ViewBag.Title</h4>
    @Html.Action("Search")
</div>

<div class="border-0">
    <div class="row form-inline">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions()
    {
        Display = PagedListDisplayMode.IfNeeded,
        DisplayPageCountAndCurrentLocation = true,
        DisplayItemSliceAndTotal = true,
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item", "page-link" },
        ContainerDivClasses = new[] { "page-item", "page-link" }
    })

        @Html.ActionLink(" Listing", "Listing", null, new { @class = "btn btn-sm fa fa-print", title = "Listing" })
    </div>
    <table class="table table-bordered table-hover table-responsive-lg table-sm">
        <tr class="label-primary">
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().JOBNO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CASENO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CSJOBM.CONO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CSJOBM.CSCOMSTR.CONAME)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().STAGE)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Stages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().STAGEDATE)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().STAGETIME)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StageAge)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CSJOBM.JOBSTAFF)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CSJOBM.HKSTAFF.STAFFDESC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CASECODE)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CSCASE.CASEDESC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CASEMEMO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CASEREM)
            </th>




        </tr>

        @foreach (var item in Model)
        {
            <tr class="text-nowrap">
                <td>
                    @if (item.COMPLETE == "N")
                    {
                        @Html.ActionLink(" ", "Edit", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.JOBNO), row = item.CASENO, rel = 1, page = ViewBag.page }, new { @class = "fa fa-edit", title = "Edit" })
                    }
                    @Html.ActionLink(" ", "Details", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.JOBNO), row = item.CASENO, rel = 1, page = ViewBag.page }, new { @class = "fa fa-folder", title = "Details" })
          
                    @if (item.COMPLETE == "N")
                    {
                              if ((item.STAGE == "Complete") || (item.STAGE == "Cancel"))
                              {
                        @Html.ActionLink(" ", "Post", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.JOBNO), row = item.CASENO, rel = 1, page = ViewBag.page }, new { @class = "fa fa-cog", title = "Post" })
                              }
                              else
                              {
                        @Html.ActionLink(" ", "EditStaff", "CSJOBMs", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.JOBNO), page = ViewBag.page }, new { @class = "fa fa-child", title = "Assign Staff" })
                              }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JOBNO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CASENO)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.CSJOBM.CSCOMSTR.COREGNO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSJOBM.CSCOMSTR.CONAME)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.STAGE)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.STAGEDATE)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.STAGETIME)
                </td>
                <td style="text-align:right">
                    @if (item.StageAge != 0)
                    {
                    @Html.DisplayFor(modelItem => item.StageAge)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSJOBM.JOBSTAFF)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSJOBM.HKSTAFF.STAFFDESC)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CASECODE)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSCASE.CASEDESC)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CASEMEMO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSJOBSTs.OrderByDescending(x => x.INIDX).FirstOrDefault().REM)
                </td>


            </tr>
        }

    </table>
</div>