

@model WebApplication1.CSCOTX

@{
    ViewBag.Title = "Create1  CSCOTX";
}

<div class="border border-info bg-info" style="width:98vw">
    <h2 class="h2 text-center">Create1 CSCOTX</h2>
</div>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ADATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ADATE, new { htmlAttributes = new {  @Value = Model.ADATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })

                @Html.ValidationMessageFor(model => model.ADATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CONO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CONO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ENDDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ENDDATE, new { htmlAttributes = new {  @Value = Model.ENDDATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })

                @Html.ValidationMessageFor(model => model.ENDDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.RDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.RDATE, new { htmlAttributes = new {  @Value = Model.RDATE?.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })
                @Html.ValidationMessageFor(model => model.RDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.REM, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.REM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.REM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ROWNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ROWNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ROWNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.TXCODE, "TXCODE", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("TXCODE", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TXCODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
				@Html.ActionLink(" Back", "Index", null, new { @class = "btn btn-info fa fa-arrow-left" })
            </div>
        </div>
    </div>
}



@section Scripts {

<script>
            var datefield = document.createElement("input")
        datefield.setAttribute("type", "date")
    if (datefield.type != "date") { 
        jQuery(function ($) { 
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                startDate: '-30000d',

            });

        })
    }
</script>
    @Scripts.Render("~/bundles/jqueryval")
}
