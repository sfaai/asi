

@model WebApplication1.CSBILL

@{
    ViewBag.Title = "Create  CSBILL";
}

<div class="border border-info bg-info" style="width:98vw">
    <h2 class="h2 text-center">@ViewBag.Title</h2>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.BILLNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.BILLNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BILLNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ENTDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ENTDATE, new { htmlAttributes = new {  @Value = Model.ENTDATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })

                @Html.ValidationMessageFor(model => model.ENTDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CONO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CONO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.JOBNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.JOBNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JOBNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CASENO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CASENO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CASENO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CASECODE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CASECODE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CASECODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ITEMTYPE, "ITEMTYPE", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("ITEMTYPE", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ITEMTYPE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ITEMDESC, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ITEMDESC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ITEMDESC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ITEMSPEC, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ITEMSPEC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ITEMSPEC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.TAXRATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.TAXRATE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TAXRATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ITEMAMT1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ITEMAMT1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ITEMAMT1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.TAXAMT1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.TAXAMT1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TAXAMT1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.NETAMT1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.NETAMT1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NETAMT1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ITEMAMT2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ITEMAMT2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ITEMAMT2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.TAXAMT2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.TAXAMT2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TAXAMT2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.NETAMT2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.NETAMT2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NETAMT2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ITEMAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.ITEMAMT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ITEMAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.TAXAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.TAXAMT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TAXAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.NETAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.NETAMT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NETAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SYSGEN, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.SYSGEN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SYSGEN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.PRFALLOC, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.PRFALLOC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRFALLOC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.PRFNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.PRFNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRFNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.PRFID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.PRFID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRFID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary fa fa-save" Title="Create" />
				@Html.ActionLink(" Back", "Index", null, new { @class = "btn btn-info fa fa-arrow-left" })
            </div>
        </div>
    </div>
}


