

@model WebApplication1.HKSTAFF

@{
    ViewBag.Title = "Create  HKSTAFF";
}

<div class="border border-info bg-info" style="width:98vw">
    <h4 class="h4 text-center">@ViewBag.Title</h4>
</div>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAFFCODE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAFFCODE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAFFCODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAFFDESC, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAFFDESC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAFFDESC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAFFLEVEL, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAFFLEVEL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAFFLEVEL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.MSTRSTAFF, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.MSTRSTAFF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MSTRSTAFF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.REFCNT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.REFCNT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.REFCNT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary fa fa-save" Title="Create" />
				@Html.ActionLink(" Back", "Index", null, new { @class = "btn btn-info fa fa-arrow-left" })
            </div>
        </div>
    </div>
}



@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
