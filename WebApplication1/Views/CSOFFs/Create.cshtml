

@model WebApplication1.CSOFF

@{
    ViewBag.Title = "Create  CSOFF";
}

<div class="border border-info bg-info" style="width:98vw">
    <h4 class="h4 text-center">@ViewBag.Title</h4>
</div>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.TRNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.TRNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TRNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.VDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.VDATE, new { htmlAttributes = new {  @Value = Model.VDATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })

                @Html.ValidationMessageFor(model => model.VDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CONO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CONO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.DBTYPE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.DBTYPE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DBTYPE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.DBNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.DBNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DBNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.DBID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.DBID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DBID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CRTYPE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CRTYPE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CRTYPE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CRNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CRNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CRNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CRID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.CRID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CRID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBITEM1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBITEM1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBITEM1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBITEM2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBITEM2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBITEM2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBITEM, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBITEM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBITEM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBTAX1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBTAX1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBTAX1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBTAX2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBTAX2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBTAX2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBTAX, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBTAX, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBTAX, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBAMT1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBAMT1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBAMT1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBAMT2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBAMT2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBAMT2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPDBAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPDBAMT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPDBAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRITEM1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRITEM1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRITEM1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRITEM2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRITEM2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRITEM2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRITEM, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRITEM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRITEM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRTAX1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRTAX1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRTAX1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRTAX2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRTAX2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRTAX2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRTAX, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRTAX, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRTAX, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRAMT1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRAMT1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRAMT1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRAMT2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRAMT2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRAMT2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.APPCRAMT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.APPCRAMT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APPCRAMT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.REM, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.REM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.REM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SEQNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.SEQNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SEQNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.POST, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.POST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.POST, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
					@Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary fa fa-save" Title="Create" />
				@Html.ActionLink(" Back", "Index", null, new { @class = "btn btn-info fa fa-arrow-left" })
            </div>
        </div>
    </div>
}



@section Scripts {

<script>
            var datefield = document.createElement("input")
        datefield.setAttribute("type", "date")
    if (datefield.type != "date") { 
        jQuery(function ($) { 
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                startDate: '-30000d',

            });

        })
    }
</script>
    @Scripts.Render("~/bundles/jqueryval")
}
