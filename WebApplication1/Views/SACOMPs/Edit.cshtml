@model WebApplication1.SACOMP

@{
    Layout = "~/Views/Shared/_LayoutG.cshtml";
    ViewBag.Title = Model.CONAME;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>@ViewBag.Title</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CONAME)

        <div class="form-group">
            @Html.LabelFor(model => model.COREGNO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COREGNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COREGNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.COADDR1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COADDR1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COADDR1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.COADDR2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COADDR2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.COADDR3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COADDR3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.COADDR4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COADDR4, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-check-inline">
            <div class="form-group">
                <div class="col-md-8">

                    @Html.LabelFor(model => model.COPHONE1, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.COPHONE1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COPHONE1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-8">
                    @Html.LabelFor(model => model.COPHONE2, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.COPHONE2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COPHONE2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group form-check-inline">
            <div class="form-group">
                <div class="col-md-8">
                    @Html.LabelFor(model => model.COFAX1, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.COFAX1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COFAX1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-8">
                    @Html.LabelFor(model => model.COFAX2, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.COFAX2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COFAX2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group form-check-inline">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.COWEB, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.COWEB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COWEB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.CTRYOPR, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CTRYOPR, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CTRYOPR, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.ACCMETHOD, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ACCMETHOD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ACCMETHOD, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.STAMP)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
