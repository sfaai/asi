<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@using WebApplication1.Utility;
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<div class="border border-info bg-info" style="width:98vw">
    <h2 class="h2 text-center">@ViewBag.Title</h2>
</div>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<table class="table table-bordered table-hover table-responsive-lg table-sm">
    <tr  class="label-primary">
	   <th>
         @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary h4" })
       </th>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;


// added:
properties = ScaffoldHelpers.GetPropertiesInDisplayOrder(ViewDataTypeName, properties);

foreach (PropertyMetadata property in properties) {
	// original line
	// do not show primary key but our database is designed in such that primary key needs also to be shown
	// 
	// if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
    if (property.Scaffold && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        
    </tr>

@foreach (var item in Model) {
            <tr class="text-nowrap">
<#
string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
                <td>
                    @Html.ActionLink(" ", "Edit", new { id =  MyHtmlHelpers.ConvertIdToByteStr(item.<#= pkName #> ) }, new {@class="fa fa-edit", title="Edit"})
                    @Html.ActionLink(" ", "Details", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.<#= pkName #> ) }, new { @class = "fa fa-folder", title = "Details" })
                    @Html.ActionLink(" ", "Delete", new { id = MyHtmlHelpers.ConvertIdToByteStr(item.<#= pkName #> ) }, new { @class = "fa fa-trash", title = "Delete" })
                </td>
<#
} else {
#>
                <td>
                    @Html.ActionLink(" ", "Edit", new {  /* id=item.PrimaryKey */  }, new {@class="fa fa-edit", title="Edit"})
                    @Html.ActionLink(" ", "Details", new {  /* id=item.PrimaryKey */ }, new { @class = "fa fa-folder", title = "Details" })
                    @Html.ActionLink(" ", "Delete", new {  /* id=item.PrimaryKey */  }, new { @class = "fa fa-trash", title = "Delete" })
                </td>

<#
}
#>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold &&  !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}


#>
    </tr>
}

</table>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>