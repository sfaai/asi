@model WebApplication1.CSCOSTAT
@using WebApplication1.Utility

@{
    ViewBag.Title = "Create Company Status";
}

<div class="border border-info bg-info" style="width:98vw">
    <h2 class="h2 text-center">@ViewBag.Title</h2>
</div>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CSCOSTAT</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CONO)
        @Html.HiddenFor(model => model.ROWNO)
        @Html.HiddenFor(model => model.STAMP)
        @Html.HiddenFor(model => model.EDATE)
        @*<div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.CONO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CONO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONO, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.SDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
 @Html.EditorFor(model => model.SDATE, new { htmlAttributes = new {  @Value = Model.SDATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })


                @Html.ValidationMessageFor(model => model.SDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.COSTAT, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("COSTAT", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.COSTAT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="divEditFileLoc">
            @{Html.RenderPartial("Partial/EditFileLoc", @Model);}
        </div>

        @*<div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.EDATE, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
 @Html.EditorFor(model => model.EDATE, new { htmlAttributes = new {  @Value = Model.EDATE.ToString("yyyy-MM-dd"), @class = "form-control date datepicker" } })


                @Html.ValidationMessageFor(model => model.EDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.ROWNO, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ROWNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ROWNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10 form-check-inline">
            @Html.LabelFor(model => model.STAMP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.STAMP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STAMP, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
				@Html.ActionLink(" Back", "details", "cSCOMSTRs", new { id = MyHtmlHelpers.ConvertIdToByteStr(Model.CONO) }, new { @class = "btn btn-info fa fa-arrow-left" })
            </div>
        </div>
    </div>
}



@section Scripts {

<script>
            var datefield = document.createElement("input")
        datefield.setAttribute("type", "date")
    if (datefield.type != "date") { 
        jQuery(function ($) { 
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                startDate: '-30000d',

            });

        })
    }

    JModel = null;

    $(document).ready(
        function()
        { JModel = @Html.Raw(Json.Encode(@Model)); }
        )



    $('#COSTAT').change(function () {
        var status = $('#COSTAT').val();

        JModel.COSTAT = $('#COSTAT').val();
        JModel.FILETYPE = $('#FILETYPE').val();
        JModel.FILELOC = $('#FILELOC').val();
        JModel.SEALLOC = $('#SEALLOC').val();
        JModel.SDATE = $('#SDATE').val();
        JModel.EDATE = $('#EDATE').val();

        var jData = JSON.stringify(JModel);   

        $("#divEditFileLoc").load('@Url.Action("EditFileLoc")',JModel, function(){
            // callback once completed async call
            // $("#divEditFileLoc2").text(jData);
        }
           );

    })
</script>
    @Scripts.Render("~/bundles/jqueryval")
}
